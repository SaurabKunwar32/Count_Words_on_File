#!/usr/bin/env node

const fs = require('node:fs/promises');

 // Get file path and optional search word from command line arguments
const filePath = process.argv[2];
// The word you want to search for (optional)
const searchWord = process.argv[3]; 

 // Check if file path is provided if not provided the console will print
if (!filePath) {
console.log("Usage: node app.js <file-path> [search-word]");
process.exit(1); // Exit if file path is missing
}

 async function CountWords(filePath,searchWord) {
    
try {
// Read the file content asynchronously
const fileContent = await fs.readFile(filePath, "utf-8");

 // Split the content into words and filter out empty strings
const WordsArray = fileContent.split(/[\W]/).filter((w) => w);

 // If no search word is provided, count occurrences of all words
if (!searchWord) {
const WordCount = {};

WordsArray.forEach((word) => {
const lowerCaseWord = word.toLowerCase(); // Case-insensitive counting
if (lowerCaseWord in WordCount) {
WordCount[lowerCaseWord] += 1;
} else {
WordCount[lowerCaseWord] = 1;
}
});

console.log("Word frequency in the file:", WordCount);
} else {
// If search word is provided, count its occurrences
const wordCount = WordsArray.reduce((count, word) => {
if (word.toLowerCase() === searchWord.toLowerCase()) {
count += 1;
}
return count;
}, 0);

console.log(
`The word "${searchWord}" appeared ${wordCount} time(s) in the file.`
);
}
} catch (error) {
console.error("Error reading the file:", error.message);
}
}

 // Execute the function
CountWords(filePath,searchWord)

export {CountWords}